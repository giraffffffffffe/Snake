Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.*;\n\npublic class Main extends JFrame implements ActionListener{\n    public Color BACKGROUND_COLOR = new Color(84,170,89); //colour that the background is\n    public Color WALL_COLOR = new Color(48, 13, 1); //colour that the walls are\n    public Color DOT_COLOR = new Color(6, 89, 55); //colour that the snake is\n    private final String[] MENU_NAMES = {\"Help\", \"Configure\", \"Actions\"};\n    private final String[] MENU0_OPTIONS = {\"Instructions\"}; // options in Help menu\n    private final String[] MENU1_OPTIONS = {\"Keys\", \"Snake Speed\"}; // options in configure menu\n    private final String[] MENU2_OPTIONS = {\"Pause\"}; // options in actions menu\n    private Box[][] board = new Box[50][50]; // creates a 2D array of boxes\n    private int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width; // width of the screen\n    private int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height; // height of the screen\n    private final int X_OFFSET = 8; // x offset of the board (for school, 8) (for home, 0)\n    private final int Y_OFFSET = 54; // y offset of the board (for school, 54) (for home, 49)\n    private double dscreenWidth = Toolkit.getDefaultToolkit().getScreenSize().width; // width of the screen\n    private double dscreenHeight = Toolkit.getDefaultToolkit().getScreenSize().height; // height of the screen\n    private final double DX_OFFSET = 8; // x offset of the board (for school, 8) (for home, 0)\n    private final double DY_OFFSET = 54; // y offset of the board (for school, 54) (for home, 49)\n    private int windWidth = 500; // initial width of window\n    private int windHeight = 500; // initial height of window\n    private final String APPLE_FILE = \"apple.png\";\n    private final String ORANGE_FILE = \"orange.png\";\n    private final String KIWIFRUIT_FILE = \"kiwifruit.png\";\n    private final String PLUM_FILE = \"plum.png\";\n    private final ImageIcon APPLE = new ImageIcon(APPLE_FILE);\n    private final ImageIcon ORANGE = new ImageIcon(ORANGE_FILE);\n    private final ImageIcon KIWIFRUIT = new ImageIcon(KIWIFRUIT_FILE);\n    private final ImageIcon PLUM = new ImageIcon(PLUM_FILE);\n    JMenuBar menuBar; // creates a menubar\n    JMenuItem menuItem; // creates a menu item\n    Canvas myGraphic; // canvas that is used for the graphics\n    JPanel panel = new JPanel(); // initialises JPanel\n    Scanner kb = new Scanner(System.in); // initialises keyboard\n    Fruit f = new Fruit(randomNumber(0,3), 100, 100); // initialises fruit\n    public static void main(String[] args) { // starts program\n        new Main();\n    }\n\n    public Main(){ // runs initially\n        for(int i = 0; i < 50; i++){ // for each box in the board\n            for(int j = 0; j < 50; j++){\n                if (i == 0 || i == 49 || j == 0 || j == 49){ // if the box is on the edge\n                    board[i][j] = new Box(); // creates a new box\n                    board[i][j].setWall(true); // sets the box to be a wall\n                }else{\n                    board[i][j] = new Box(); // creates a new box\n                }\n            }\n        }\n        this.setTitle(\"Snake!\"); // sets title of Window to \"Snake!\"\n        System.out.println(dscreenWidth/dscreenHeight+\" \"+DX_OFFSET/DY_OFFSET+\" \"+(dscreenWidth/dscreenHeight)/(DX_OFFSET/DY_OFFSET));\n        this.getContentPane().setBackground(BACKGROUND_COLOR); // sets the background colour of the window\n        this.getContentPane().setPreferredSize(new Dimension(windWidth,windHeight)); // sets the size of the window\n        this.setResizable(false); // stops the user from resizing the window\n        this.panel.setPreferredSize(new Dimension(windWidth,windHeight));\n        Snake s = new Snake(); // initialises Snake\n\n        this.menuBar = new JMenuBar(); // makes a new menubar\n        this.setJMenuBar(menuBar); // sets the menubar to the window\n        createMenu(MENU0_OPTIONS, 0); // creates the menus\n        createMenu(MENU1_OPTIONS, 1);\n        createMenu(MENU2_OPTIONS, 2);\n\n        this.myGraphic = new Canvas(); // initialises graphic\n        this.panel.add(myGraphic); // adds canvas to panel\n\n        this.setLayout(null);\n        this.setDefaultCloseOperation(EXIT_ON_CLOSE); // stops program when window is closed\n        this.pack(); // makes the window\n        this.toFront(); // puts this window on top of other windows the user might have open.\n        this.setLocationRelativeTo(null); // opens the window in the middle of the screen\n        this.setVisible(true); // makes the window visible\n\n    }\n    private void createMenu(String[] menuOptions, int numMenus) { // creates menus in window\n        JMenu menu = new JMenu(MENU_NAMES[numMenus]); // creates a new menu\n        menuBar.add(menu); // adds the menu to the menubar\n\n        for (String o : menuOptions){ // for each option in the menu\n            menuItem = new JMenuItem(o); // creates a new menu item\n            switch (o){ // sets the accelerator for the menu item\n                case \"Instructions\" -> menuItem.setAccelerator(KeyStroke.getKeyStroke('i'));\n                case \"Pause\" -> menuItem.setAccelerator(KeyStroke.getKeyStroke('p'));\n            }\n            menuItem.addActionListener(this); // adds an action listener to the menu item\n            menu.add(menuItem); // adds the menu item to the menu\n        }\n    }\n    public void actionPerformed(ActionEvent e) { // when a menu item is clicked\n        String command = e.getActionCommand(); // gets the command of the menu item\n        switch (command){ // does something based on the command\n            case \"Instructions\" -> {\n                JOptionPane.showMessageDialog(this, \"Use the arrow keys to move the snake. Eat the food to grow. Don't hit the walls or yourself.\");\n            }\n            case \"Pause\" -> {\n                JOptionPane.showMessageDialog(this, \"Game is paused. Press 'p' to unpause.\");\n                pause(); // pauses the game\n            }\n        }\n    }\n\n    private void pause() { // pauses the game\n        while (true){ // infinite loop\n            if (kb.nextLine().equals(\"p\")){ // if the user types 'p'\n                break; // breaks the loop\n            }\n        }\n    }\n\n    private void fruitEaten(Snake s) { // when the snake eats a fruit\n        s.setLength(s.getLength() + 1); // increases the length of the snake\n        f.eaten(); // sets the fruit to 'eaten';\n        f = new Fruit(randomNumber(0, 3), randomNumber(0, windWidth), randomNumber(0, windHeight)); // makes a new fruit\n    }\n\n    public int randomNumber(int min, int max) { // generates a random number between min and max\n        return (int) (Math.random() * (max - min + 1) + min);\n    }\n    public void paint(Graphics g) { //paints the window\n        System.out.println(\"paint\");\n        super.paint(g);\n        for(int i = 0; i < 50; i++){ // for each box in the board\n            for(int j = 0; j < 50; j++){\n                if (board[i][j].isWall()){ // if the box is a wall\n                    g.setColor(WALL_COLOR); // sets the colour to dark green\n                    g.fillRect(i*10+X_OFFSET, j*10+Y_OFFSET, 10, 10); // draws the box\n                }\n                else if (board[i][j].isFruit()){ // if the box is the fruit\n                    switch (f.getType()){ // draws the fruit based on the type\n                        case \"Apple\" -> {\n                            APPLE.paintIcon(this, g,f.getX(),f.getY());\n                        }\n                        case \"Orange\" -> {\n                            ORANGE.paintIcon(this, g,0,53);\n                        }\n                        case \"Kiwifruit\" -> {\n                            KIWIFRUIT.paintIcon(this, g,0,53);\n                        }\n                        case \"Plum\" -> {\n                            PLUM.paintIcon(this, g,0,53);\n                        }\n                        default -> {\n                            System.out.println(\"Something went wrong\");\n                        }\n                    }\n                }\n                else{\n\n                }\n            }\n        }\n//\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 0438239956de0230a506df49fc876a7a227b9ebf)
+++ b/src/Main.java	(date 1716158257238)
@@ -14,12 +14,12 @@
     private Box[][] board = new Box[50][50]; // creates a 2D array of boxes
     private int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width; // width of the screen
     private int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height; // height of the screen
-    private final int X_OFFSET = 8; // x offset of the board (for school, 8) (for home, 0)
-    private final int Y_OFFSET = 54; // y offset of the board (for school, 54) (for home, 49)
+    private final int X_OFFSET = 0; // x offset of the board (for school, 8) (for home, 0)
+    private final int Y_OFFSET = 49; // y offset of the board (for school, 54) (for home, 49)
     private double dscreenWidth = Toolkit.getDefaultToolkit().getScreenSize().width; // width of the screen
     private double dscreenHeight = Toolkit.getDefaultToolkit().getScreenSize().height; // height of the screen
-    private final double DX_OFFSET = 8; // x offset of the board (for school, 8) (for home, 0)
-    private final double DY_OFFSET = 54; // y offset of the board (for school, 54) (for home, 49)
+    private final double DX_OFFSET = 0; // x offset of the board (for school, 8) (for home, 0)
+    private final double DY_OFFSET = 49; // y offset of the board (for school, 54) (for home, 49)
     private int windWidth = 500; // initial width of window
     private int windHeight = 500; // initial height of window
     private final String APPLE_FILE = "apple.png";
@@ -52,7 +52,7 @@
             }
         }
         this.setTitle("Snake!"); // sets title of Window to "Snake!"
-        System.out.println(dscreenWidth/dscreenHeight+" "+DX_OFFSET/DY_OFFSET+" "+(dscreenWidth/dscreenHeight)/(DX_OFFSET/DY_OFFSET));
+        System.out.println(dscreenHeight/DY_OFFSET+" "+dscreenWidth/DX_OFFSET);
         this.getContentPane().setBackground(BACKGROUND_COLOR); // sets the background colour of the window
         this.getContentPane().setPreferredSize(new Dimension(windWidth,windHeight)); // sets the size of the window
         this.setResizable(false); // stops the user from resizing the window
@@ -74,6 +74,7 @@
         this.toFront(); // puts this window on top of other windows the user might have open.
         this.setLocationRelativeTo(null); // opens the window in the middle of the screen
         this.setVisible(true); // makes the window visible
+        System.out.println(this.getHeight());
 
     }
     private void createMenu(String[] menuOptions, int numMenus) { // creates menus in window
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ee0a2173-176d-400d-bd49-b46cdcab95b0\" name=\"Changes\" comment=\"Tried to fix x and y offset\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;giraffffffffffe&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"3d4e3119-b12d-4970-bd1a-fa5691f740f4\" />\n        <option name=\"url\" value=\"https://github.com/giraffffffffffe/Snake.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2fvhMkDouY8YaNAkaprv2FfMfOy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;H:/CSC335/finalProject/Snake&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ee0a2173-176d-400d-bd49-b46cdcab95b0\" name=\"Changes\" comment=\"\" />\n      <created>1714687415116</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1714687415116</updated>\n      <workItem from=\"1714687416213\" duration=\"1394000\" />\n      <workItem from=\"1714945900902\" duration=\"2809000\" />\n      <workItem from=\"1715221744157\" duration=\"2427000\" />\n      <workItem from=\"1715224194492\" duration=\"569000\" />\n      <workItem from=\"1715291784185\" duration=\"1819000\" />\n      <workItem from=\"1715551112163\" duration=\"2477000\" />\n      <workItem from=\"1715822320792\" duration=\"3315000\" />\n      <workItem from=\"1715896013329\" duration=\"3276000\" />\n      <workItem from=\"1716155111498\" duration=\"1364000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Started working on GUI and make a Snake class\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714948714146</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714948714146</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Window opens and there are menus\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715224758135</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715224758135</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Made panel non-resizable, added code for some menu items\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715293679784</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715293679784</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Made Fruit class and worked connecting everything\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715553825087</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715553825087</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"changed a fruit and started working on the board\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715829576765</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715829576765</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"added fruit files and continued working on the board. added outer walls to the board\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1715899337436</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1715899337436</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Tried to fix x and y offset\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716155906297</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716155906297</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Started working on GUI and make a Snake class\" />\n    <MESSAGE value=\"Window opens and there are menus\" />\n    <MESSAGE value=\"Made panel non-resizable, added code for some menu items\" />\n    <MESSAGE value=\"Made Fruit class and worked connecting everything\" />\n    <MESSAGE value=\"changed a fruit and started working on the board\" />\n    <MESSAGE value=\"added fruit files and continued working on the board. added outer walls to the board\" />\n    <MESSAGE value=\"Tried to fix x and y offset\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Tried to fix x and y offset\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0438239956de0230a506df49fc876a7a227b9ebf)
+++ b/.idea/workspace.xml	(date 1716158336983)
@@ -4,7 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ee0a2173-176d-400d-bd49-b46cdcab95b0" name="Changes" comment="Tried to fix x and y offset">
+    <list default="true" id="ee0a2173-176d-400d-bd49-b46cdcab95b0" name="Changes" comment="realised that there is a different amount of X and Y offset for each machine">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
     </list>
@@ -87,7 +88,7 @@
       <workItem from="1715551112163" duration="2477000" />
       <workItem from="1715822320792" duration="3315000" />
       <workItem from="1715896013329" duration="3276000" />
-      <workItem from="1716155111498" duration="1364000" />
+      <workItem from="1716155111498" duration="660000" />
     </task>
     <task id="LOCAL-00001" summary="Started working on GUI and make a Snake class">
       <option name="closed" value="true" />
@@ -137,15 +138,7 @@
       <option name="project" value="LOCAL" />
       <updated>1715899337436</updated>
     </task>
-    <task id="LOCAL-00007" summary="Tried to fix x and y offset">
-      <option name="closed" value="true" />
-      <created>1716155906297</created>
-      <option name="number" value="00007" />
-      <option name="presentableId" value="LOCAL-00007" />
-      <option name="project" value="LOCAL" />
-      <updated>1716155906297</updated>
-    </task>
-    <option name="localTasksCounter" value="8" />
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -169,7 +162,6 @@
     <MESSAGE value="Made Fruit class and worked connecting everything" />
     <MESSAGE value="changed a fruit and started working on the board" />
     <MESSAGE value="added fruit files and continued working on the board. added outer walls to the board" />
-    <MESSAGE value="Tried to fix x and y offset" />
-    <option name="LAST_COMMIT_MESSAGE" value="Tried to fix x and y offset" />
+    <option name="LAST_COMMIT_MESSAGE" value="added fruit files and continued working on the board. added outer walls to the board" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 0438239956de0230a506df49fc876a7a227b9ebf)
+++ b/.idea/misc.xml	(date 1716156682073)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
